
// Generated by Akka gRPC. DO NOT EDIT.
package cityfeed.application.grpc

import akka.annotation.ApiMayChange


trait RegisterService {
  
  
  def registerUser(in: cityfeed.application.grpc.RegisterRequest): scala.concurrent.Future[cityfeed.application.grpc.RegisterResponse]
  
}



object RegisterService extends akka.grpc.ServiceDescription {
  val name = "auth.RegisterService"

  val descriptor: com.google.protobuf.Descriptors.FileDescriptor =
    cityfeed.application.grpc.AuthenticationProto.javaDescriptor;

  object Serializers {
    import akka.grpc.scaladsl.ScalapbProtobufSerializer
    
    val RegisterRequestSerializer = new ScalapbProtobufSerializer(cityfeed.application.grpc.RegisterRequest.messageCompanion)
    
    val RegisterResponseSerializer = new ScalapbProtobufSerializer(cityfeed.application.grpc.RegisterResponse.messageCompanion)
    
  }

  @ApiMayChange
  object MethodDescriptors {
    import akka.grpc.internal.Marshaller
    import io.grpc.MethodDescriptor
    import Serializers._

    
    val registerUserDescriptor: MethodDescriptor[cityfeed.application.grpc.RegisterRequest, cityfeed.application.grpc.RegisterResponse] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("auth.RegisterService", "RegisterUser"))
        .setRequestMarshaller(new Marshaller(RegisterRequestSerializer))
        .setResponseMarshaller(new Marshaller(RegisterResponseSerializer))
        .setSampledToLocalTracing(true)
        .build()
    
  }
}
