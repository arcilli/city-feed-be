
// Generated by Akka gRPC. DO NOT EDIT.
package cityfeed.application.grpc

import akka.annotation.ApiMayChange


trait FetchService {
  
  
  def fetchPosts(in: cityfeed.application.grpc.FetchRequest): akka.stream.scaladsl.Source[cityfeed.application.grpc.FetchedPosts, akka.NotUsed]
  
}



object FetchService extends akka.grpc.ServiceDescription {
  val name = "feed.FetchService"

  val descriptor: com.google.protobuf.Descriptors.FileDescriptor =
    cityfeed.application.grpc.FeedProto.javaDescriptor;

  object Serializers {
    import akka.grpc.scaladsl.ScalapbProtobufSerializer
    
    val FetchRequestSerializer = new ScalapbProtobufSerializer(cityfeed.application.grpc.FetchRequest.messageCompanion)
    
    val FetchedPostsSerializer = new ScalapbProtobufSerializer(cityfeed.application.grpc.FetchedPosts.messageCompanion)
    
  }

  @ApiMayChange
  object MethodDescriptors {
    import akka.grpc.internal.Marshaller
    import io.grpc.MethodDescriptor
    import Serializers._

    
    val fetchPostsDescriptor: MethodDescriptor[cityfeed.application.grpc.FetchRequest, cityfeed.application.grpc.FetchedPosts] =
      MethodDescriptor.newBuilder()
        .setType(
  
  
   MethodDescriptor.MethodType.SERVER_STREAMING 
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("feed.FetchService", "fetchPosts"))
        .setRequestMarshaller(new Marshaller(FetchRequestSerializer))
        .setResponseMarshaller(new Marshaller(FetchedPostsSerializer))
        .setSampledToLocalTracing(true)
        .build()
    
  }
}
