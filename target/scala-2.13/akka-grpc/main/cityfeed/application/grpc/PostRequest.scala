// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cityfeed.application.grpc

@SerialVersionUID(0L)
final case class PostRequest(
    message: _root_.scala.Predef.String = "",
    base64Image: _root_.scala.Predef.String = "",
    location: _root_.scala.Predef.String = "",
    tags: _root_.scala.Predef.String = "",
    userToken: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PostRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = message
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = base64Image
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = location
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = tags
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = userToken
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = message
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = base64Image
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = location
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = tags
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = userToken
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withMessage(__v: _root_.scala.Predef.String): PostRequest = copy(message = __v)
    def withBase64Image(__v: _root_.scala.Predef.String): PostRequest = copy(base64Image = __v)
    def withLocation(__v: _root_.scala.Predef.String): PostRequest = copy(location = __v)
    def withTags(__v: _root_.scala.Predef.String): PostRequest = copy(tags = __v)
    def withUserToken(__v: _root_.scala.Predef.String): PostRequest = copy(userToken = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = message
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = base64Image
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = location
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = tags
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = userToken
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(message)
        case 2 => _root_.scalapb.descriptors.PString(base64Image)
        case 3 => _root_.scalapb.descriptors.PString(location)
        case 4 => _root_.scalapb.descriptors.PString(tags)
        case 5 => _root_.scalapb.descriptors.PString(userToken)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cityfeed.application.grpc.PostRequest.type = cityfeed.application.grpc.PostRequest
    // @@protoc_insertion_point(GeneratedMessage[feed.PostRequest])
}

object PostRequest extends scalapb.GeneratedMessageCompanion[cityfeed.application.grpc.PostRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cityfeed.application.grpc.PostRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cityfeed.application.grpc.PostRequest = {
    var __message: _root_.scala.Predef.String = ""
    var __base64Image: _root_.scala.Predef.String = ""
    var __location: _root_.scala.Predef.String = ""
    var __tags: _root_.scala.Predef.String = ""
    var __userToken: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __message = _input__.readStringRequireUtf8()
        case 18 =>
          __base64Image = _input__.readStringRequireUtf8()
        case 26 =>
          __location = _input__.readStringRequireUtf8()
        case 34 =>
          __tags = _input__.readStringRequireUtf8()
        case 42 =>
          __userToken = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cityfeed.application.grpc.PostRequest(
        message = __message,
        base64Image = __base64Image,
        location = __location,
        tags = __tags,
        userToken = __userToken,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cityfeed.application.grpc.PostRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cityfeed.application.grpc.PostRequest(
        message = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        base64Image = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        location = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        tags = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        userToken = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = FeedProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = FeedProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cityfeed.application.grpc.PostRequest(
    message = "",
    base64Image = "",
    location = "",
    tags = "",
    userToken = ""
  )
  implicit class PostRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cityfeed.application.grpc.PostRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cityfeed.application.grpc.PostRequest](_l) {
    def message: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.message)((c_, f_) => c_.copy(message = f_))
    def base64Image: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.base64Image)((c_, f_) => c_.copy(base64Image = f_))
    def location: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.location)((c_, f_) => c_.copy(location = f_))
    def tags: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tags)((c_, f_) => c_.copy(tags = f_))
    def userToken: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.userToken)((c_, f_) => c_.copy(userToken = f_))
  }
  final val MESSAGE_FIELD_NUMBER = 1
  final val BASE64IMAGE_FIELD_NUMBER = 2
  final val LOCATION_FIELD_NUMBER = 3
  final val TAGS_FIELD_NUMBER = 4
  final val USER_TOKEN_FIELD_NUMBER = 5
  def of(
    message: _root_.scala.Predef.String,
    base64Image: _root_.scala.Predef.String,
    location: _root_.scala.Predef.String,
    tags: _root_.scala.Predef.String,
    userToken: _root_.scala.Predef.String
  ): _root_.cityfeed.application.grpc.PostRequest = _root_.cityfeed.application.grpc.PostRequest(
    message,
    base64Image,
    location,
    tags,
    userToken
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[feed.PostRequest])
}
