// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cityfeed.application.grpc

@SerialVersionUID(0L)
final case class RegisterRequest(
    emailAddress: _root_.scala.Predef.String = "",
    username: _root_.scala.Predef.String = "",
    fullName: _root_.scala.Predef.String = "",
    password: _root_.scala.Predef.String = "",
    address: _root_.scala.Predef.String = "",
    city: _root_.scala.Predef.String = "",
    neighborhood: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RegisterRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = emailAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = username
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = fullName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = password
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = address
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = city
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = neighborhood
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = emailAddress
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = username
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = fullName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = password
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = address
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = city
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = neighborhood
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withEmailAddress(__v: _root_.scala.Predef.String): RegisterRequest = copy(emailAddress = __v)
    def withUsername(__v: _root_.scala.Predef.String): RegisterRequest = copy(username = __v)
    def withFullName(__v: _root_.scala.Predef.String): RegisterRequest = copy(fullName = __v)
    def withPassword(__v: _root_.scala.Predef.String): RegisterRequest = copy(password = __v)
    def withAddress(__v: _root_.scala.Predef.String): RegisterRequest = copy(address = __v)
    def withCity(__v: _root_.scala.Predef.String): RegisterRequest = copy(city = __v)
    def withNeighborhood(__v: _root_.scala.Predef.String): RegisterRequest = copy(neighborhood = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = emailAddress
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = username
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = fullName
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = password
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = address
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = city
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = neighborhood
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(emailAddress)
        case 2 => _root_.scalapb.descriptors.PString(username)
        case 3 => _root_.scalapb.descriptors.PString(fullName)
        case 4 => _root_.scalapb.descriptors.PString(password)
        case 5 => _root_.scalapb.descriptors.PString(address)
        case 6 => _root_.scalapb.descriptors.PString(city)
        case 7 => _root_.scalapb.descriptors.PString(neighborhood)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cityfeed.application.grpc.RegisterRequest.type = cityfeed.application.grpc.RegisterRequest
    // @@protoc_insertion_point(GeneratedMessage[auth.RegisterRequest])
}

object RegisterRequest extends scalapb.GeneratedMessageCompanion[cityfeed.application.grpc.RegisterRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cityfeed.application.grpc.RegisterRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cityfeed.application.grpc.RegisterRequest = {
    var __emailAddress: _root_.scala.Predef.String = ""
    var __username: _root_.scala.Predef.String = ""
    var __fullName: _root_.scala.Predef.String = ""
    var __password: _root_.scala.Predef.String = ""
    var __address: _root_.scala.Predef.String = ""
    var __city: _root_.scala.Predef.String = ""
    var __neighborhood: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __emailAddress = _input__.readStringRequireUtf8()
        case 18 =>
          __username = _input__.readStringRequireUtf8()
        case 26 =>
          __fullName = _input__.readStringRequireUtf8()
        case 34 =>
          __password = _input__.readStringRequireUtf8()
        case 42 =>
          __address = _input__.readStringRequireUtf8()
        case 50 =>
          __city = _input__.readStringRequireUtf8()
        case 58 =>
          __neighborhood = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cityfeed.application.grpc.RegisterRequest(
        emailAddress = __emailAddress,
        username = __username,
        fullName = __fullName,
        password = __password,
        address = __address,
        city = __city,
        neighborhood = __neighborhood,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cityfeed.application.grpc.RegisterRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cityfeed.application.grpc.RegisterRequest(
        emailAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        username = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        fullName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        password = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        address = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        city = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        neighborhood = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AuthenticationProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AuthenticationProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cityfeed.application.grpc.RegisterRequest(
    emailAddress = "",
    username = "",
    fullName = "",
    password = "",
    address = "",
    city = "",
    neighborhood = ""
  )
  implicit class RegisterRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cityfeed.application.grpc.RegisterRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cityfeed.application.grpc.RegisterRequest](_l) {
    def emailAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.emailAddress)((c_, f_) => c_.copy(emailAddress = f_))
    def username: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.username)((c_, f_) => c_.copy(username = f_))
    def fullName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.fullName)((c_, f_) => c_.copy(fullName = f_))
    def password: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.password)((c_, f_) => c_.copy(password = f_))
    def address: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.address)((c_, f_) => c_.copy(address = f_))
    def city: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.city)((c_, f_) => c_.copy(city = f_))
    def neighborhood: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.neighborhood)((c_, f_) => c_.copy(neighborhood = f_))
  }
  final val EMAIL_ADDRESS_FIELD_NUMBER = 1
  final val USERNAME_FIELD_NUMBER = 2
  final val FULL_NAME_FIELD_NUMBER = 3
  final val PASSWORD_FIELD_NUMBER = 4
  final val ADDRESS_FIELD_NUMBER = 5
  final val CITY_FIELD_NUMBER = 6
  final val NEIGHBORHOOD_FIELD_NUMBER = 7
  def of(
    emailAddress: _root_.scala.Predef.String,
    username: _root_.scala.Predef.String,
    fullName: _root_.scala.Predef.String,
    password: _root_.scala.Predef.String,
    address: _root_.scala.Predef.String,
    city: _root_.scala.Predef.String,
    neighborhood: _root_.scala.Predef.String
  ): _root_.cityfeed.application.grpc.RegisterRequest = _root_.cityfeed.application.grpc.RegisterRequest(
    emailAddress,
    username,
    fullName,
    password,
    address,
    city,
    neighborhood
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[auth.RegisterRequest])
}
